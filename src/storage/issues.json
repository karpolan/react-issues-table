[
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14920",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14920/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14920/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14920/events",
    "html_url": "https://github.com/facebook/react/issues/14920",
    "id": 413077280,
    "node_id": "MDU6SXNzdWU0MTMwNzcyODA=",
    "number": 14920,
    "title": "[ESLint] Feedback for 'exhaustive-deps' lint rule",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "gaearon",
        "id": 810438,
        "node_id": "MDQ6VXNlcjgxMDQzOA==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gaearon",
        "html_url": "https://github.com/gaearon",
        "followers_url": "https://api.github.com/users/gaearon/followers",
        "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
        "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
        "organizations_url": "https://api.github.com/users/gaearon/orgs",
        "repos_url": "https://api.github.com/users/gaearon/repos",
        "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gaearon/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-21T19:03:49Z",
    "updated_at": "2019-02-21T20:05:06Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "## What is this\r\n\r\nThis is a new ESLint rule that verifies the list of dependencies for Hooks like `useEffect` and similar, protecting against the stale closure pitfalls. For most cases it has an autofix. We'll add more documentation over the next weeks.\r\n\r\n![autofix demo](https://user-images.githubusercontent.com/810438/53197370-f7b9be80-3611-11e9-9d97-fc69285000d0.gif)\r\n\r\n## Installation\r\n\r\n```\r\nyarn add eslint-plugin-react-hooks\r\n# or\r\nnpm install eslint-plugin-react-hooks\r\n```\r\n\r\nESLint config:\r\n\r\n```js\r\n{\r\n  \"plugins\": [\"react-hooks\"],\r\n  // ...\r\n  \"rules\": {\r\n    \"react-hooks/rules-of-hooks\": 2,\r\n    \"react-hooks/exhaustive-deps\": 2 // <--- THIS IS THE NEW RULE\r\n  }\r\n}\r\n```\r\n\r\nSimple test case to verify the rule works:\r\n\r\n```js\r\nfunction Foo(props) {\r\n  useEffect(() => {\r\n    console.log(props.name);\r\n  }, []); // <-- should error and offer autofix to [props.name]\r\n}\r\n``` \r\n## The lint rule complains but my code is fine!\r\n\r\n**If this new `react-hooks/exhaustive-deps` lint rule fires for you but you think your code is correct**, please post in this issue:\r\n\r\n1. A CodeSandbox demonstrating a **minimal code example** that still expresses your intent (not \"foo bar\" but **actual UI pattern** you're implementing).\r\n2. An explanation of the **steps** a user does and what you expect to see on the screen.\r\n3. An explanation of the **intended API** of your Hook/component.\r\n\r\n**Please _do not_ post comments without all of these details.** Thanks."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14919",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14919/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14919/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14919/events",
    "html_url": "https://github.com/facebook/react/issues/14919",
    "id": 413055375,
    "node_id": "MDU6SXNzdWU0MTMwNTUzNzU=",
    "number": 14919,
    "title": "Adapt release process instructions to our patch release process",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 71502270,
        "node_id": "MDU6TGFiZWw3MTUwMjI3MA==",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Build%20Infrastructure",
        "name": "Component: Build Infrastructure",
        "color": "f9d0c4",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-02-21T18:07:17Z",
    "updated_at": "2019-02-21T21:07:01Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Basically this:\r\n\r\n<img width=\"407\" alt=\"screen shot 2019-02-21 at 6 06 46 pm\" src=\"https://user-images.githubusercontent.com/810438/53191345-8246f180-3603-11e9-9fd0-bc9944da92f1.png\">\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14918",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14918/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14918/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14918/events",
    "html_url": "https://github.com/facebook/react/issues/14918",
    "id": 413047650,
    "node_id": "MDU6SXNzdWU0MTMwNDc2NTA=",
    "number": 14918,
    "title": "Errors in tracing fixture shouldn't look like errors in packaging fixture",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 71502270,
        "node_id": "MDU6TGFiZWw3MTUwMjI3MA==",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Build%20Infrastructure",
        "name": "Component: Build Infrastructure",
        "color": "f9d0c4",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "bvaughn",
        "id": 29597,
        "node_id": "MDQ6VXNlcjI5NTk3",
        "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-21T17:47:54Z",
    "updated_at": "2019-02-21T17:48:02Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Before https://github.com/facebook/react/pull/14917, I used to get this:\r\n\r\n<img width=\"502\" alt=\"screen shot 2019-02-21 at 5 38 03 pm\" src=\"https://user-images.githubusercontent.com/810438/53190100-cbe20d00-3600-11e9-9ffa-b230f3bb78fe.png\">\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14912",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14912/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14912/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14912/events",
    "html_url": "https://github.com/facebook/react/pull/14912",
    "id": 412794337,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU0OTIxNTEx",
    "number": 14912,
    "title": "Deprecate ref.setNativeProps in favor of ReactNative.setNativeProps",
    "user": {
      "login": "TheSavior",
      "id": 249164,
      "node_id": "MDQ6VXNlcjI0OTE2NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/249164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheSavior",
      "html_url": "https://github.com/TheSavior",
      "followers_url": "https://api.github.com/users/TheSavior/followers",
      "following_url": "https://api.github.com/users/TheSavior/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheSavior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheSavior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheSavior/subscriptions",
      "organizations_url": "https://api.github.com/users/TheSavior/orgs",
      "repos_url": "https://api.github.com/users/TheSavior/repos",
      "events_url": "https://api.github.com/users/TheSavior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheSavior/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-21T08:02:11Z",
    "updated_at": "2019-02-21T19:27:30Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14912",
      "html_url": "https://github.com/facebook/react/pull/14912",
      "diff_url": "https://github.com/facebook/react/pull/14912.diff",
      "patch_url": "https://github.com/facebook/react/pull/14912.patch"
    },
    "body": "Related to: react-native-community/discussions-and-proposals#72\r\n\r\nWe want people to call the new top level API for setNativeProps that was added in https://github.com/facebook/react/pull/14907. This PR adds deprecation warnings for the current methods. \r\n\r\nI need to think about how I want to handle the migration of core and internal and could use some insight. I could:\r\n\r\n- hold off on landing this and instead update core to the new API before any warnings land\r\n- land this and add a yellow box ignore internally as we are converting core. If this change goes out with 0.60 then we have time. We might want to land this in 0.59 to have the warnings out as soon as possible although that would also mean we'd need to cherry pick the fixes for these warnings in core into 0.59"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14911",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14911/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14911/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14911/events",
    "html_url": "https://github.com/facebook/react/issues/14911",
    "id": 412789154,
    "node_id": "MDU6SXNzdWU0MTI3ODkxNTQ=",
    "number": 14911,
    "title": "after upgarding to 16.8.2 - Getting error TypeError: Cannot set property 'props' of undefined PureComponent node_modules/react/cjs/react.development.js:394",
    "user": {
      "login": "hardikb08",
      "id": 45588444,
      "node_id": "MDQ6VXNlcjQ1NTg4NDQ0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45588444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hardikb08",
      "html_url": "https://github.com/hardikb08",
      "followers_url": "https://api.github.com/users/hardikb08/followers",
      "following_url": "https://api.github.com/users/hardikb08/following{/other_user}",
      "gists_url": "https://api.github.com/users/hardikb08/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hardikb08/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hardikb08/subscriptions",
      "organizations_url": "https://api.github.com/users/hardikb08/orgs",
      "repos_url": "https://api.github.com/users/hardikb08/repos",
      "events_url": "https://api.github.com/users/hardikb08/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hardikb08/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620368407,
        "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        "name": "Resolution: Needs More Information",
        "color": "fffde7",
        "default": false
      },
      {
        "id": 1168115654,
        "node_id": "MDU6TGFiZWwxMTY4MTE1NjU0",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Support%20Redirect",
        "name": "Resolution: Support Redirect",
        "color": "106099",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-21T07:45:36Z",
    "updated_at": "2019-02-21T14:32:48Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Pls find screenshot for more [details](url\r\n<img width=\"1280\" alt=\"screen shot 2019-02-21 at 12 24 41 pm\" src=\"https://user-images.githubusercontent.com/45588444/53152091-b3f79280-35da-11e9-99dc-658940473d5f.png\">\r\n)\r\n\r\nPackage.json\r\n\r\n\"@babel/core\": \"7.1.6\",\r\n    \"@svgr/webpack\": \"2.4.1\",\r\n    \"babel-core\": \"7.0.0-bridge.0\",\r\n    \"babel-eslint\": \"9.0.0\",\r\n    \"babel-jest\": \"23.6.0\",\r\n    \"babel-loader\": \"8.0.4\",\r\n    \"babel-plugin-named-asset-import\": \"^0.3.1\",\r\n    \"babel-preset-react-app\": \"^7.0.1\",\r\n    \"bfj\": \"6.1.1\",\r\n    \"bootstrap-daterangepicker\": \"^3.0.3\",\r\n    \"case-sensitive-paths-webpack-plugin\": \"2.1.2\",\r\n    \"chalk\": \"2.4.1\",\r\n    \"connected-react-router\": \"^6.3.1\",\r\n    \"css-loader\": \"1.0.0\",\r\n    \"dotenv\": \"6.0.0\",\r\n    \"dotenv-expand\": \"4.2.0\",\r\n    \"eslint\": \"^5.14.0\",\r\n    \"eslint-config-react-app\": \"^3.0.7\",\r\n    \"eslint-loader\": \"2.1.1\",\r\n    \"eslint-plugin-flowtype\": \"2.50.1\",\r\n    \"eslint-plugin-import\": \"2.14.0\",\r\n    \"eslint-plugin-jsx-a11y\": \"6.1.2\",\r\n    \"eslint-plugin-react\": \"7.11.1\",\r\n    \"exceljs\": \"^1.7.0\",\r\n    \"file-loader\": \"2.0.0\",\r\n    \"file-saver\": \"^2.0.1\",\r\n    \"fork-ts-checker-webpack-plugin-alt\": \"0.4.14\",\r\n    \"fs-extra\": \"7.0.0\",\r\n    \"history\": \"^4.7.2\",\r\n    \"html-webpack-plugin\": \"4.0.0-alpha.2\",\r\n    \"identity-obj-proxy\": \"3.0.0\",\r\n    \"immutable\": \"^4.0.0-rc.12\",\r\n    \"jest\": \"23.6.0\",\r\n    \"jest-pnp-resolver\": \"1.0.1\",\r\n    \"jest-resolve\": \"23.6.0\",\r\n    \"jquery\": \"^3.3.1\",\r\n    \"jquery-param\": \"^1.0.1\",\r\n    \"mini-css-extract-plugin\": \"0.4.3\",\r\n    \"moment\": \"^2.24.0\",\r\n    \"normalize.css\": \"^8.0.1\",\r\n    \"optimize-css-assets-webpack-plugin\": \"5.0.1\",\r\n    \"pnp-webpack-plugin\": \"1.1.0\",\r\n    \"postcss-flexbugs-fixes\": \"4.1.0\",\r\n    \"postcss-loader\": \"3.0.0\",\r\n    \"postcss-preset-env\": \"6.3.1\",\r\n    \"postcss-pxtorem\": \"^4.0.1\",\r\n    \"postcss-safe-parser\": \"4.0.1\",\r\n    \"prop-types\": \"^15.7.2\",\r\n    \"query-string\": \"^6.2.0\",\r\n    \"react\": \"^16.8.2\",\r\n    \"react-app-polyfill\": \"^0.2.1\",\r\n    \"react-bootstrap\": \"^0.32.4\",\r\n    \"react-bootstrap-daterangepicker\": \"^4.1.0\",\r\n    \"react-dev-utils\": \"^7.0.3\",\r\n    \"react-dom\": \"^16.8.2\",\r\n    \"react-dropzone\": \"^8.1.0\",\r\n    \"react-infinite-scroller\": \"^1.2.4\",\r\n    \"react-redux\": \"^6.0.0\",\r\n    \"react-router\": \"^4.3.1\",\r\n    \"react-router-dom\": \"^4.3.1\",\r\n    \"react-slick\": \"^0.23.2\",\r\n    \"react-toastify\": \"^4.5.2\",\r\n    \"redux\": \"^4.0.1\",\r\n    \"redux-actions\": \"^2.6.4\",\r\n    \"redux-define\": \"^1.1.1\",\r\n    \"redux-form\": \"^8.1.0\",\r\n    \"redux-immutable\": \"^4.0.0\",\r\n    \"redux-logger\": \"^3.0.6\",\r\n    \"redux-starter-kit\": \"^0.3.3\",\r\n    \"redux-thunk\": \"^2.3.0\",\r\n    \"resolve\": \"1.8.1\",\r\n    \"sass-loader\": \"7.1.0\",\r\n    \"style-loader\": \"0.23.0\",\r\n    \"styled-components\": \"^4.1.3\",\r\n    \"terser-webpack-plugin\": \"1.1.0\",\r\n    \"url-loader\": \"1.1.1\",\r\n    \"webpack\": \"4.19.1\",\r\n    \"webpack-dev-server\": \"^3.1.14\",\r\n    \"webpack-manifest-plugin\": \"2.0.4\",\r\n    \"whatwg-fetch\": \"^3.0.0\",\r\n    \"workbox-webpack-plugin\": \"3.6.3\",\r\n    \"xlsx\": \"^0.14.1\""
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14906",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14906/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14906/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14906/events",
    "html_url": "https://github.com/facebook/react/pull/14906",
    "id": 412672265,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU0ODI4NzM4",
    "number": 14906,
    "title": "Support editable useState hooks in DevTools",
    "user": {
      "login": "bvaughn",
      "id": 29597,
      "node_id": "MDQ6VXNlcjI5NTk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-02-20T23:08:54Z",
    "updated_at": "2019-02-21T21:28:32Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14906",
      "html_url": "https://github.com/facebook/react/pull/14906",
      "diff_url": "https://github.com/facebook/react/pull/14906.diff",
      "patch_url": "https://github.com/facebook/react/pull/14906.patch"
    },
    "body": "Commits are atomic to simplify review:\r\n\r\n[`8ba7ad2`](/facebook/react/pull/14906/commits/8ba7ad2738da9f7a86ec293e62138376d329a201): Add new injected `overrideHook` method for re-rendering a function component with an updated state hook value. (I think that using the `dispatch` function directly like I'm doing is a reasonable approach, but let me know if I'm overlooking something.)\r\n\r\n43c8281: Identify native hook index for inspected hooks. (This value is used when editing hook state.) Technically I could calculate this value in DevTools by crawling the hooks tree, but it seemed slightly more appropriate to put this logic in the `react-debug-tools` package. I'm wiling to change this though if anyone feels strongly.\r\n\r\nP.S. We should release the `react-debug-tools` package soon, yes?"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14902",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14902/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14902/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14902/events",
    "html_url": "https://github.com/facebook/react/pull/14902",
    "id": 412591900,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjU0NzY1NjM2",
    "number": 14902,
    "title": "Patch release branch for 16.8.3",
    "user": {
      "login": "acdlite",
      "id": 3624098,
      "node_id": "MDQ6VXNlcjM2MjQwOTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acdlite",
      "html_url": "https://github.com/acdlite",
      "followers_url": "https://api.github.com/users/acdlite/followers",
      "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
      "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
      "organizations_url": "https://api.github.com/users/acdlite/orgs",
      "repos_url": "https://api.github.com/users/acdlite/repos",
      "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acdlite/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-20T19:32:26Z",
    "updated_at": "2019-02-21T17:30:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14902",
      "html_url": "https://github.com/facebook/react/pull/14902",
      "diff_url": "https://github.com/facebook/react/pull/14902.diff",
      "patch_url": "https://github.com/facebook/react/pull/14902.patch"
    },
    "body": "Includes two bugfixes cherry-picked onto the commit of the 16.8.2 release (https://github.com/facebook/react/commit/3e5556043879c9c7b98dd9edfc0e89df0366714b).\r\n\r\nCanary release: [`0.0.0-b668168d4`](https://unpkg.com/react@0.0.0-b668168d4/)\r\n\r\n## Changelog\r\n\r\n### React DOM\r\n\r\n- Fix a bug that caused inputs to behave incorrectly in UMD builds. ([@gaearon](https://github.com/gaearon) in [#14914](https://github.com/facebook/react/pull/14914))\r\n- Fix a bug that caused render phase updates to be discarded. ([@gaearon](https://github.com/gaearon) in [#14852](https://github.com/facebook/react/pull/14852))\r\n\r\n### React DOM Server\r\n- Unwind the context stack when a stream is destroyed without completing, to prevent incorrect values during a subsequent render. ([@overlookmotel](https://github.com/overlookmotel) in [#14706](https://github.com/facebook/react/pull/14706/))\r\n\r\n## Test plan\r\n\r\n- Test case for #14849: https://codesandbox.io/s/wn23y2yx9k"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14899",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14899/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14899/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14899/events",
    "html_url": "https://github.com/facebook/react/issues/14899",
    "id": 412541333,
    "node_id": "MDU6SXNzdWU0MTI1NDEzMzM=",
    "number": 14899,
    "title": "Using lazy components within react router resulting in strange behavior",
    "user": {
      "login": "kmcaloon",
      "id": 10777353,
      "node_id": "MDQ6VXNlcjEwNzc3MzUz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10777353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmcaloon",
      "html_url": "https://github.com/kmcaloon",
      "followers_url": "https://api.github.com/users/kmcaloon/followers",
      "following_url": "https://api.github.com/users/kmcaloon/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmcaloon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmcaloon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmcaloon/subscriptions",
      "organizations_url": "https://api.github.com/users/kmcaloon/orgs",
      "repos_url": "https://api.github.com/users/kmcaloon/repos",
      "events_url": "https://api.github.com/users/kmcaloon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmcaloon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620368407,
        "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        "name": "Resolution: Needs More Information",
        "color": "fffde7",
        "default": false
      },
      {
        "id": 1168115654,
        "node_id": "MDU6TGFiZWwxMTY4MTE1NjU0",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Support%20Redirect",
        "name": "Resolution: Support Redirect",
        "color": "106099",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-20T17:24:30Z",
    "updated_at": "2019-02-21T15:54:39Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nI am using React.lazy and react-router-dom to dynamically load/render components within routes.  \r\nIf the app initially loads at a route with a non-lazy component, as soon as I click on link to a route with a lazy component the entire page flashes and refreshes at that route. If the app initially loads at a route with a lazy component, as soon as I click on a link to another lazy component route, the app throws the following error:  Uncaught Invariant Violation: Unable to find node on an unmounted component.\r\n\r\nHere is a portion of the code in question:\r\n```\r\nconst DashScreen = React.lazy( () => import( 'screens-pilots/DashScreen' ) );\r\nconst SingleWingScreen = React.lazy( () => import( 'screens-pilots/SingleWingScreen' ) );\r\n\r\n...\r\n\r\n  <Switch>\r\n    <Route\r\n    path={ '/home' }\r\n    render={ router =>\r\n      <DashScreen router={ router }/>\r\n    }\r\n    />\r\n    <Route\r\n    path={ '/wings/:slug' }\r\n    render={ router =>\r\n      <SingleWingScreen\r\n      router={ router }\r\n      data={ p.AppState.is_enterprise_pilot ? p.AppState.company.wings : null }\r\n      />\r\n    }\r\n    />\r\n  </Switch>\r\n\r\n```\r\n\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nNot possible at the moment, but if necessary will try to produce a minimal demo.  For what it's worth I am using a customized cra with the following package.json\r\n\r\n```\r\n{\r\n  \"name\": \"hi-there\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@material-ui/core\": \"^3.9.2\",\r\n    \"@sentry/browser\": \"^4.5.3\",\r\n    \"antd\": \"^3.13.2\",\r\n    \"await-to-js\": \"^2.1.1\",\r\n    \"axios\": \"^0.18.0\",\r\n    \"bootstrap\": \"^4.3.0\",\r\n    \"classnames\": \"^2.2.6\",\r\n    \"craco-preact\": \"^1.1.0\",\r\n    \"date-fns\": \"^1.30.1\",\r\n    \"directory-named-webpack-plugin\": \"^4.0.0\",\r\n    \"js-cookie\": \"^2.2.0\",\r\n    \"material-ui\": \"^0.20.2\",\r\n    \"node-sass\": \"^4.11.0\",\r\n    \"rc-queue-anim\": \"^1.6.11\",\r\n    \"react\": \"^16.8.1\",\r\n    \"react-cache\": \"^2.0.0-alpha.1\",\r\n    \"react-dom\": \"^16.8.1\",\r\n    \"react-helmet\": \"^5.2.0\",\r\n    \"react-loadable\": \"^5.5.0\",\r\n    \"react-router\": \"^4.3.1\",\r\n    \"react-router-dom\": \"^4.3.1\",\r\n    \"react-scripts\": \"^2.1.5\",\r\n    \"react-use\": \"^5.3.0\",\r\n    \"reactstrap\": \"^7.1.0\",\r\n    \"sass-rem\": \"^2.0.1\",\r\n    \"webpack-bundle-analyzer\": \"^3.0.3\",\r\n    \"webpackbar\": \"^3.1.5\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"nodemon -w craco.config.js -w ./src/lib/ant-theme.less --exec 'craco start'\",\r\n    \"start-live-api\": \"REACT_APP_API=production craco start\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": \"react-app\"\r\n  },\r\n  \"browserslist\": [\r\n    \">0.2%\",\r\n    \"not dead\",\r\n    \"not ie <= 11\",\r\n    \"not op_mini all\"\r\n  ],\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^3.4.1\",\r\n    \"craco-antd\": \"^1.10.0\",\r\n    \"nodemon\": \"^1.18.10\"\r\n  }\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\nSmooth navigation.  React Loadable is currently working as expected with this exact setup when I swap it in for React.Lazy().\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14898",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14898/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14898/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14898/events",
    "html_url": "https://github.com/facebook/react/issues/14898",
    "id": 412500474,
    "node_id": "MDU6SXNzdWU0MTI1MDA0NzQ=",
    "number": 14898,
    "title": "Hooks error on bundle SSR, but works fine on client",
    "user": {
      "login": "vemundeldegard",
      "id": 36489034,
      "node_id": "MDQ6VXNlcjM2NDg5MDM0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36489034?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vemundeldegard",
      "html_url": "https://github.com/vemundeldegard",
      "followers_url": "https://api.github.com/users/vemundeldegard/followers",
      "following_url": "https://api.github.com/users/vemundeldegard/following{/other_user}",
      "gists_url": "https://api.github.com/users/vemundeldegard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vemundeldegard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vemundeldegard/subscriptions",
      "organizations_url": "https://api.github.com/users/vemundeldegard/orgs",
      "repos_url": "https://api.github.com/users/vemundeldegard/repos",
      "events_url": "https://api.github.com/users/vemundeldegard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vemundeldegard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620368407,
        "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        "name": "Resolution: Needs More Information",
        "color": "fffde7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-20T15:58:48Z",
    "updated_at": "2019-02-21T14:33:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nFirst i run `npm run build` in /client, then I start the server in another window by going to /server and run `npm start`. When I go to a page that uses hooks (http://localhost:3000/para), I get an error. See below. \r\n\r\nInterestingly it works fine when I use class components and good old state (http://localhost:3000/dyna).  When I run` npm start` on the client side, both state and hooks work fine. But it does not work from static markup. \r\n\r\nSmall piece of the simple hooks page:\r\n\r\n```\r\nconst ParaPage = () => {\r\n\r\n  const [pages, setPages] = useState(null);\r\n\r\n  Sanity.fetch(`\r\n  *[_type == \"sider\" && hidden == false]{\r\n      _id,\r\n      name,\r\n      path,\r\n  } | order(_createdAt asc)\r\n  `)\r\n    .then(res => {\r\n      setPages(res)\r\n    })\r\n    .catch(err => {\r\n      setPages(err)\r\n    })\r\n\r\n}\r\n```\r\n\r\n> (node:1551) UnhandledPromiseRejectionWarning: Invariant Violation: Hooks can only be called inside the body of a function component. (https://fb.me/react-invalid-hook-call)\r\n>     at invariant (/Users/vemundeldegard/siste/client/node_modules/react/cjs/react.development.js:88:15)\r\n>     at resolveDispatcher (/Users/vemundeldegard/siste/client/node_modules/react/cjs/react.development.js:1436:28)\r\n>     at useState (/Users/vemundeldegard/siste/client/node_modules/react/cjs/react.development.js:1461:20)\r\n>     at ParaPage (/Users/vemundeldegard/siste/client/lib/ParaPage.js:21:39)\r\n>     at processChild (/Users/vemundeldegard/siste/server/node_modules/react-dom/cjs/react-dom-server.node.development.js:2871:14)\r\n>     at resolve (/Users/vemundeldegard/siste/server/node_modules/react-dom/cjs/react-dom-server.node.development.js:2795:5)\r\n>     at ReactDOMServerRenderer.render (/Users/vemundeldegard/siste/server/node_modules/react-dom/cjs/react-dom-server.node.development.js:3175:22)\r\n>     at ReactDOMServerRenderer.read (/Users/vemundeldegard/siste/server/node_modules/react-dom/cjs/react-dom-server.node.development.js:3134:29)\r\n>     at renderToString (/Users/vemundeldegard/siste/server/node_modules/react-dom/cjs/react-dom-server.node.development.js:3619:27)\r\n>     at /Users/vemundeldegard/siste/server/lib/react-renderer.js:64:15\r\n> (node:1551) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 4)\r\n> \r\n> \r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nSee repo here: https://github.com/vemundeldegard/ssr-hooks\r\n\r\n**What is the expected behavior?**\r\n\r\nTo render the hooks just as good as state. \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nRunning React 16.8.2 on Mac OS 10.14\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14897",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14897/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14897/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14897/events",
    "html_url": "https://github.com/facebook/react/issues/14897",
    "id": 412492368,
    "node_id": "MDU6SXNzdWU0MTI0OTIzNjg=",
    "number": 14897,
    "title": "Controlled <input type=\"email\" /> has residual white space",
    "user": {
      "login": "danott",
      "id": 185476,
      "node_id": "MDQ6VXNlcjE4NTQ3Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/185476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danott",
      "html_url": "https://github.com/danott",
      "followers_url": "https://api.github.com/users/danott/followers",
      "following_url": "https://api.github.com/users/danott/following{/other_user}",
      "gists_url": "https://api.github.com/users/danott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danott/subscriptions",
      "organizations_url": "https://api.github.com/users/danott/orgs",
      "repos_url": "https://api.github.com/users/danott/repos",
      "events_url": "https://api.github.com/users/danott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danott/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 127893911,
        "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
        "name": "Component: DOM",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 710722093,
        "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
        "name": "Type: Needs Investigation",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-20T15:43:09Z",
    "updated_at": "2019-02-21T18:32:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\n🐛 \r\n\r\n**What is the current behavior?**\r\n\r\nLeading and trailing whitespace can remain present on a controlled `<input type=\"email\" />`, even when the controlling value has the whitespace removed.\r\n\r\n**What is the expected behavior?**\r\n\r\nLeading and trailing whitespace should not remain present on a controlled `<input type=\"email\" />`, even when the controlling value has the whitespace removed.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI discovered this while using React 16.8.2 in Safari Version 12.0.2 (14606.3.4)\r\n\r\nHere's a code sandbox that demonstrates the behavior: https://codesandbox.io/s/1ozyz1kn5l"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14886",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14886/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14886/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14886/events",
    "html_url": "https://github.com/facebook/react/issues/14886",
    "id": 411884298,
    "node_id": "MDU6SXNzdWU0MTE4ODQyOTg=",
    "number": 14886,
    "title": "Talkback for android announces ‘double tap twice to activate’ for headers and subheaders",
    "user": {
      "login": "Samerabutt",
      "id": 47779709,
      "node_id": "MDQ6VXNlcjQ3Nzc5NzA5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/47779709?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Samerabutt",
      "html_url": "https://github.com/Samerabutt",
      "followers_url": "https://api.github.com/users/Samerabutt/followers",
      "following_url": "https://api.github.com/users/Samerabutt/following{/other_user}",
      "gists_url": "https://api.github.com/users/Samerabutt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Samerabutt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Samerabutt/subscriptions",
      "organizations_url": "https://api.github.com/users/Samerabutt/orgs",
      "repos_url": "https://api.github.com/users/Samerabutt/repos",
      "events_url": "https://api.github.com/users/Samerabutt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Samerabutt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710722093,
        "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
        "name": "Type: Needs Investigation",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-19T11:48:16Z",
    "updated_at": "2019-02-19T14:30:03Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n Bug\r\n\r\n**What is the current behavior?**\r\nWhen the user uses the swipe mechanism to navigate through fields, talkback for android announces ‘double tap twice to activate’ when focusing on headers and sub headers\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n1. I created an ap using create-react-app\r\n2. I use talkback for android, chrome browser, to access the app and use the swipe mechanism to navigate through the fields\r\n3. When headers and subheaders are in focus, talkback announces ‘double tap to activate’\r\n\r\n**What is the expected behavior?**\r\nTalkback should not announce ‘double tap to activate’ as the headers and sub headers can not be activated.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact:16.8.1\r\nOS: Oreo 8.1/pie 9\r\nBrowser: chrome\r\nDevice: Samsung edge"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14882",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14882/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14882/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14882/events",
    "html_url": "https://github.com/facebook/react/issues/14882",
    "id": 411685106,
    "node_id": "MDU6SXNzdWU0MTE2ODUxMDY=",
    "number": 14882,
    "title": "Reasons React would be calling render() when memo returns false",
    "user": {
      "login": "natew",
      "id": 12100,
      "node_id": "MDQ6VXNlcjEyMTAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12100?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natew",
      "html_url": "https://github.com/natew",
      "followers_url": "https://api.github.com/users/natew/followers",
      "following_url": "https://api.github.com/users/natew/following{/other_user}",
      "gists_url": "https://api.github.com/users/natew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natew/subscriptions",
      "organizations_url": "https://api.github.com/users/natew/orgs",
      "repos_url": "https://api.github.com/users/natew/repos",
      "events_url": "https://api.github.com/users/natew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natew/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620368407,
        "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        "name": "Resolution: Needs More Information",
        "color": "fffde7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-18T23:37:32Z",
    "updated_at": "2019-02-19T17:18:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nMore of a good place to document some behavior.\r\n\r\n**What is the current behavior?**\r\n\r\nIt's hard to isolate why this happens because it's something inside React that's making this decision. Perhaps context is changing. But my biggest frustrations lately have been due to renders happening when they shouldn't, or seem like they shouldn't.\r\n\r\nFor example I can have a component like so:\r\n\r\n```ts\r\nconst Component = React.memo(() => <div />, (a, b) => true)\r\n```\r\n\r\nAnd I'll find it calling render quite often in a performance sensitive area.\r\n\r\nIt would be helpful to have docs somewhere that really go into why a component render is being called.\r\n\r\nFurther, it would be even more helpful to have a sort of \"debug stream\" you could hook into to see React logging reasons why things are updated in a clean fashion. That this doesn't exist already is a bit of a mystery. It would have saved a ridiculous amount of time for myself over the last years, and I'm sure many others. It would look something like:\r\n\r\n```\r\n(render) ComponentName [props changed]\r\n(render) OtherComponentName [props changed] [state changed]\r\n```\r\n\r\nEven better would be to show some sort of tree structure. And show the results of memo/shouldComponentUpdate, and why they may have been ignored:\r\n\r\n```\r\n(render) ComponentName [memo: true | ignored due to context change in: SomeContext] \r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14881",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14881/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14881/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14881/events",
    "html_url": "https://github.com/facebook/react/issues/14881",
    "id": 411657824,
    "node_id": "MDU6SXNzdWU0MTE2NTc4MjQ=",
    "number": 14881,
    "title": "State is not properly cleared in case of broken hooks",
    "user": {
      "login": "theKashey",
      "id": 582410,
      "node_id": "MDQ6VXNlcjU4MjQxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/582410?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theKashey",
      "html_url": "https://github.com/theKashey",
      "followers_url": "https://api.github.com/users/theKashey/followers",
      "following_url": "https://api.github.com/users/theKashey/following{/other_user}",
      "gists_url": "https://api.github.com/users/theKashey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theKashey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theKashey/subscriptions",
      "organizations_url": "https://api.github.com/users/theKashey/orgs",
      "repos_url": "https://api.github.com/users/theKashey/repos",
      "events_url": "https://api.github.com/users/theKashey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theKashey/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 620368407,
        "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
        "name": "Resolution: Needs More Information",
        "color": "fffde7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-02-18T21:51:07Z",
    "updated_at": "2019-02-19T23:06:50Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nWith one hook rendered wrongly, with a fewer hooks for example, rest of the application is also broken.\r\nAll due _skipped_ render cleanup phase.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n```js\r\n <AppWithErrorBoundary>\r\n  <HooksInsideErrorBoundary />\r\n  <AnyFunctionalComponentWithoutHooks />\r\n </AppWithErrorBoundary>\r\n```\r\nThen _break_ hooks.\r\n\r\n- first error boundary called, and an error state is properly set.\r\n- `AnyFunctionalComponentWithoutHooks` is rendered without `currentHook` being reset from the first render.\r\n- `didRenderTooFewHooks` set to true\r\n- error propagated to `AppWithErrorBoundary`\r\n\r\nIn other words - bad hook is poisoning everything behind it.\r\n\r\n**What is the expected behavior?**\r\n\r\nExpected behavior - `error` should be catched by HooksErrorBoundary.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.8.2-"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14878",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14878/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14878/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14878/events",
    "html_url": "https://github.com/facebook/react/issues/14878",
    "id": 411467909,
    "node_id": "MDU6SXNzdWU0MTE0Njc5MDk=",
    "number": 14878,
    "title": "Simple memo components being updated with new set of props during context change",
    "user": {
      "login": "Andarist",
      "id": 9800850,
      "node_id": "MDQ6VXNlcjk4MDA4NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9800850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Andarist",
      "html_url": "https://github.com/Andarist",
      "followers_url": "https://api.github.com/users/Andarist/followers",
      "following_url": "https://api.github.com/users/Andarist/following{/other_user}",
      "gists_url": "https://api.github.com/users/Andarist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Andarist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Andarist/subscriptions",
      "organizations_url": "https://api.github.com/users/Andarist/orgs",
      "repos_url": "https://api.github.com/users/Andarist/repos",
      "events_url": "https://api.github.com/users/Andarist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Andarist/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710722093,
        "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
        "name": "Type: Needs Investigation",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-18T13:08:58Z",
    "updated_at": "2019-02-18T14:41:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nSimple memo components receive new props during context change if their parent got rerendered.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/jp21pwzrv9\r\n\r\n**What is the expected behavior?**\r\n\r\nConceptually from the user's perspective `React.memo(Component)` & `React.memo(Component, shallowEqual)` should behave exactly the same (but they dont)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nCurrent React's master ( 0e67969cb1ad8c27a72294662e68fa5d7c2c9783 ) & current latest release 16.8.2\r\n\r\nI've already written a failing test for this - https://github.com/facebook/react/pull/14876 . Would love to work on fixing this but as mentioned in this PR, I would require some guidance on how this should get fixed properly.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14876",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14876/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14876/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14876/events",
    "html_url": "https://github.com/facebook/react/pull/14876",
    "id": 411222610,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUzNzMyMjM2",
    "number": 14876,
    "title": "Add failing test for simple memo components being updated with new se…",
    "user": {
      "login": "Andarist",
      "id": 9800850,
      "node_id": "MDQ6VXNlcjk4MDA4NTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9800850?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Andarist",
      "html_url": "https://github.com/Andarist",
      "followers_url": "https://api.github.com/users/Andarist/followers",
      "following_url": "https://api.github.com/users/Andarist/following{/other_user}",
      "gists_url": "https://api.github.com/users/Andarist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Andarist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Andarist/subscriptions",
      "organizations_url": "https://api.github.com/users/Andarist/orgs",
      "repos_url": "https://api.github.com/users/Andarist/repos",
      "events_url": "https://api.github.com/users/Andarist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Andarist/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-02-17T19:06:33Z",
    "updated_at": "2019-02-20T08:34:03Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14876",
      "html_url": "https://github.com/facebook/react/pull/14876",
      "diff_url": "https://github.com/facebook/react/pull/14876.diff",
      "patch_url": "https://github.com/facebook/react/pull/14876.patch"
    },
    "body": "This is **not ready to be merged yet** because it only provides a failing test, I'd like to work on fixing this issue - but I would really appreciate some guidance with this. I've tried to understand what exactly is happening (wanted to send a PR with a fix already in it 😉 ), but failed to do so - need to dig deeper.\r\n\r\nMy current conclusion is that this fails because of the \"simple memo\" optimization - `workLoop` doesnt see this memo element at all, it \"jumps\" from working on Outer directly to Inner which has fresh `pendingProps` which are used as argument for working on Inner as it correctly has to rerender itself because it reads changed context. So it doesnt bail out on finished work (correctly) and commits used new props as memoized ones later.\r\n\r\n**Why this matters?**\r\nBecause it's inconsistent with \"regular\" memo component. Conceptually from the user's perspective `React.memo(Component)` & `React.memo(Component, shallowEqual)` should behave exactly the same (but they dont)\r\n\r\nI've prepared a demo to showcase the problem - https://codesandbox.io/s/jp21pwzrv9"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14857",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14857/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14857/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14857/events",
    "html_url": "https://github.com/facebook/react/issues/14857",
    "id": 410512417,
    "node_id": "MDU6SXNzdWU0MTA1MTI0MTc=",
    "number": 14857,
    "title": "Easily handle browser 'change' events",
    "user": {
      "login": "fabiosantoscode",
      "id": 1611595,
      "node_id": "MDQ6VXNlcjE2MTE1OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1611595?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fabiosantoscode",
      "html_url": "https://github.com/fabiosantoscode",
      "followers_url": "https://api.github.com/users/fabiosantoscode/followers",
      "following_url": "https://api.github.com/users/fabiosantoscode/following{/other_user}",
      "gists_url": "https://api.github.com/users/fabiosantoscode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fabiosantoscode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fabiosantoscode/subscriptions",
      "organizations_url": "https://api.github.com/users/fabiosantoscode/orgs",
      "repos_url": "https://api.github.com/users/fabiosantoscode/repos",
      "events_url": "https://api.github.com/users/fabiosantoscode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fabiosantoscode/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-14T22:02:04Z",
    "updated_at": "2019-02-15T14:06:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?** *feature* but I can send a PR\r\n\r\nA gold nugget we're missing in the React toolbox is a new onChange event (with a separate name) that uses the native browser change event. It's not impressive, and it's not good for updating things as the user types, but it's great for validation.\r\n\r\nConsider this case (which could be simplified greatly with a bit of metaprogramming):\r\n\r\n```js\r\n<input onWhicheverEventName={e => { this.setState({ theValue: e.target.value }); this.validate() }} />\r\n```\r\n\r\nIt doesn't make sense to use onInput here (which is what React is making me do currently). You would have to implement extra logic to detect two events, `input` and `blur`. This doesn't make sense to me, coming from implementing stuff in pure DOM for performance.\r\n\r\n**What is the current behavior?**\r\n\r\nNo easy way in React to add a browser change event handler without a ref.\r\n\r\n**What is the expected behavior?**\r\n\r\nThere should be a new event, pick your poison:\r\n\r\n - onChangeAndBlur\r\n - onChangeNative\r\n - onChangeCompleted\r\n - onCompleteChange\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?** latest\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14856",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14856/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14856/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14856/events",
    "html_url": "https://github.com/facebook/react/issues/14856",
    "id": 410478306,
    "node_id": "MDU6SXNzdWU0MTA0NzgzMDY=",
    "number": 14856,
    "title": "Chrome 73 breaks wheel events",
    "user": {
      "login": "blixt",
      "id": 158591,
      "node_id": "MDQ6VXNlcjE1ODU5MQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/158591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blixt",
      "html_url": "https://github.com/blixt",
      "followers_url": "https://api.github.com/users/blixt/followers",
      "following_url": "https://api.github.com/users/blixt/following{/other_user}",
      "gists_url": "https://api.github.com/users/blixt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blixt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blixt/subscriptions",
      "organizations_url": "https://api.github.com/users/blixt/orgs",
      "repos_url": "https://api.github.com/users/blixt/repos",
      "events_url": "https://api.github.com/users/blixt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blixt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-14T20:28:58Z",
    "updated_at": "2019-02-14T21:00:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Similar to #8968, but for the `wheel` and `mousewheel` events. They are now passive by default for root elements in Chrome 73 (currently beta) which means React apps that have custom scrolling/zooming behaviors will run into issues.\r\n\r\nThe quick fix may be to manually add event listeners with `{passive: false}` but has the React team considered if this should be configurable for the React event handler?\r\n\r\nBlog post from the Chrome team here: https://developers.google.com/web/updates/2019/02/scrolling-intervention"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14853",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14853/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14853/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14853/events",
    "html_url": "https://github.com/facebook/react/pull/14853",
    "id": 410353976,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUzMTE0MzUz",
    "number": 14853,
    "title": "RFC - await act(async () => ...)",
    "user": {
      "login": "threepointone",
      "id": 18808,
      "node_id": "MDQ6VXNlcjE4ODA4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/threepointone",
      "html_url": "https://github.com/threepointone",
      "followers_url": "https://api.github.com/users/threepointone/followers",
      "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
      "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
      "organizations_url": "https://api.github.com/users/threepointone/orgs",
      "repos_url": "https://api.github.com/users/threepointone/repos",
      "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/threepointone/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-02-14T15:27:09Z",
    "updated_at": "2019-02-20T13:45:59Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14853",
      "html_url": "https://github.com/facebook/react/pull/14853",
      "diff_url": "https://github.com/facebook/react/pull/14853.diff",
      "patch_url": "https://github.com/facebook/react/pull/14853.patch"
    },
    "body": "TODO - \r\n- [x] ReactDOM, TestRenderer, NoopRenderer\r\n- [ ] tests for other renderers, I missed them last time around \r\n- [ ] the warnings are placeholders, still thinking about what would be better, open to suggestions\r\n- [ ] implications on concurrent mode\r\n\r\n![acting](http://www.reactiongifs.com/wp-content/uploads/2013/01/acting.gif)\r\n\r\n(repasting from the group)\r\n\r\nI hacked together an asynchronous version of `act(...)`, and it's kinda nice. \r\n\r\nYou've seen the synchronous version -\r\n\r\n```js\r\nact(() => {\r\n  // updates and stuff\r\n})\r\n// make assertions \r\n```\r\n\r\nThis still works, and gives the same warnings. But if you pass an `async` function - \r\n```js\r\nawait act(async() => {\r\n  // updates and stuff\r\n})\r\n// expect commits and effects to be flushed \r\n// make assertions \r\n```\r\nNeat! I set it up so if you *don't* `await` the result from `act`, a warning gets triggered (with `setImmediate`) to do so. That makes it a bit harder to have rogue async `act()` calls in the ether.\r\n\r\nYou can nest `act()` calls - \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```js\r\nawait act(async() => {\r\n  // nest synchronous calls\r\n  act(() => {\r\n    // updates and such    \r\n  })\r\n  // as before, updates and effects are flushed \r\n\r\n  // make assertions \r\n  await sleep(500) // or for a promise to resolve, or whatever\r\n  // more assertions maybe \r\n\r\n  // nest asynchronous calls too \r\n  await act(async () => {\r\n    // mutations and such \r\n    // more awaits \r\n    // and maybe an event or two\r\n  })\r\n  // more assertions \r\n})\r\n```\r\n\r\nI implemented a cheap form of unrolling safety, so if a previous `act()` gets closed before any subsequent `act()` calls, a warning gets triggered. This should prevent most interleaving attempts, and maintain a tree-like shape of `act()` blocks. \r\n\r\npros -\r\n- works with async/await, solves oss problems cleanly \r\n- the sync api is preserved \r\n- the warning is preserved\r\n- works with fake timers/fb \r\n\r\ncons - \r\n- can't guarantee batching after the first await in an act block (this will get better when concurrent?)\r\n- less restrictive than the sync model, and starts to feel more opt-in than opt-out (eg- someone could just wrap their entire test with an `act()` call... which might be fine?)\r\n- exposes a secret api on react dom to implement it, dunno how you feel about that\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14843",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14843/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14843/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14843/events",
    "html_url": "https://github.com/facebook/react/issues/14843",
    "id": 410083829,
    "node_id": "MDU6SXNzdWU0MTAwODM4Mjk=",
    "number": 14843,
    "title": "Warning: Did not expect server HTML to contain a <ul> in <div>",
    "user": {
      "login": "heathzipongo",
      "id": 36862526,
      "node_id": "MDQ6VXNlcjM2ODYyNTI2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36862526?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heathzipongo",
      "html_url": "https://github.com/heathzipongo",
      "followers_url": "https://api.github.com/users/heathzipongo/followers",
      "following_url": "https://api.github.com/users/heathzipongo/following{/other_user}",
      "gists_url": "https://api.github.com/users/heathzipongo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heathzipongo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heathzipongo/subscriptions",
      "organizations_url": "https://api.github.com/users/heathzipongo/orgs",
      "repos_url": "https://api.github.com/users/heathzipongo/repos",
      "events_url": "https://api.github.com/users/heathzipongo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heathzipongo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 127893911,
        "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
        "name": "Component: DOM",
        "color": "fef2c0",
        "default": false
      },
      {
        "id": 710332294,
        "node_id": "MDU6TGFiZWw3MTAzMzIyOTQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering",
        "name": "Component: Server Rendering",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 710722093,
        "node_id": "MDU6TGFiZWw3MTA3MjIwOTM=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Needs%20Investigation",
        "name": "Type: Needs Investigation",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-14T01:34:31Z",
    "updated_at": "2019-02-14T05:15:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n**What is the current behavior?**\r\nI'm using Server Side rendering with `react-loadable` and my home page see this in the browser.  The warning test to be a bit different on other pages, but still seems to happen generally.  My app is using Grommet in case that matters...\r\n\r\nWhen the page renders I see the following in the console:\r\n```\r\nWarning: Did not expect server HTML to contain a <ul> in <div>.\r\n\r\nwarningWithoutStack | @ | react-dom.development.js:506\r\n-- | -- | --\r\n  | warnForDeletedHydratableElement | @ | react-dom.development.js:8254\r\n  | didNotHydrateInstance | @ | react-dom.development.js:8960\r\n  | deleteHydratableInstance | @ | react-dom.development.js:13964\r\n  | popHydrationState | @ | react-dom.development.js:14183\r\n  | completeWork | @ | react-dom.development.js:15801\r\n  | completeUnitOfWork | @ | react-dom.development.js:17981\r\n  | performUnitOfWork | @ | react-dom.development.js:18179\r\n  | workLoop | @ | react-dom.development.js:18191\r\n  | renderRoot | @ | react-dom.development.js:18277\r\n  | performWorkOnRoot | @ | react-dom.development.js:19166\r\n  | performWork | @ | react-dom.development.js:19078\r\n  | performSyncWork | @ | react-dom.development.js:19052\r\n  | requestWork | @ | react-dom.development.js:18921\r\n  | scheduleWork | @ | react-dom.development.js:18730\r\n  | scheduleRootUpdate | @ | react-dom.development.js:19398\r\n  | updateContainerAtExpirationTime | @ | react-dom.development.js:19426\r\n  | updateContainer | @ | react-dom.development.js:19483\r\n  | ReactRoot.render | @ | react-dom.development.js:19775\r\n  | (anonymous) | @ | react-dom.development.js:19915\r\n  | unbatchedUpdates | @ | react-dom.development.js:19281\r\n  | legacyRenderSubtreeIntoContainer | @ | react-dom.development.js:19911\r\n  | hydrate | @ | react-dom.development.js:19969\r\n  | (anonymous) | @ | client.js:52\r\n  | Promise.then (async) |   |  \r\n  | renderApp | @ | client.js:51\r\n  | (anonymous) | @ | client.js:60\r\n  | (anonymous) | @ | client.js:90\r\n  | ./src/client.js | @ | main.js:10934\r\n  | __webpack_require__ | @ | main.js:767\r\n  | fn | @ | main.js:130\r\n  | (anonymous) | @ | client.js:4\r\n  | 0 | @ | main.js:11473\r\n  | __webpack_require__ | @ | main.js:767\r\n  | (anonymous) | @ | main.js:902\r\n  | (anonymous) | @ | main.js:905\r\n```\r\nThe html captured on the server was as follows:\r\n```\r\n<div lang=\"en-US\" class=\"grommet grommetux-app grommetux-app--centered\"><div class=\"grommetux-header__container grommetux-header__container--fixed grommetux-header__container--fill\"><div class=\"grommetux-header__mirror\"></div><div class=\"grommetux-header__wrapper grommetux-header__wrapper--small\"><div class=\"grommetux-box grommetux-box--direction-column grommetux-box--responsive grommetux-box--pad-none grommetux-box--flex-off\"><header class=\"grommetux-box grommetux-box--direction-row grommetux-box--align-center grommetux-box--pad-horizontal-none grommetux-box--pad-vertical-none grommetux-box--pad-between-small grommetux-header grommetux-header--small header\"><div class=\"grommetux-box grommetux-box--direction-column grommetux-box--responsive grommetux-box--pad-none grommetux-menu grommetux-menu--column grommetux-menu--small grommetux-menu--controlled grommetux-menu__control\"><button type=\"button\" class=\"grommetux-button grommetux-button--plain\" aria-label=\"Open  Menu\"><span class=\"grommetux-button__icon\"><svg version=\"1.1\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\" role=\"img\" class=\"grommetux-control-icon grommetux-control-icon-menu grommetux-control-icon--responsive\" aria-label=\"menu\"><path fill=\"none\" stroke=\"#000\" stroke-width=\"2\" d=\"M2,19 L22,19 M2,5 L22,5 M2,12 L22,12\"></path></svg></span></button></div><div class=\"grommetux-box grommetux-box--direction-row grommetux-box--justify-start grommetux-box--align-center grommetux-box--flex-grow grommetux-box--pad-none grommetux-box--size-small grommetux-box--size grommetux-title grommetux-title--responsive grommetux-title--truncate\"><a href=\"/\" class=\"grommetux-anchor link link-white\">Zipongo Admin Tool</a></div></header></div></div></div><div class=\"grommetux-box grommetux-box--direction-column grommetux-box--responsive grommetux-box--pad-small\"><ul class=\"home-container small-block-grid-1 medium-block-grid-3 large-block-grid-5 text-center\"><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/cafes\">Cafe home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/cms\">CMS home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/daily-emails\">Daily email home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/easy-meals\">Easy meals</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/foodscripts/plan\">Foodscripts plan</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/household-invites/custom-text\">Household custom text</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/mobile-push\">Mobile push</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/partner-events\">Partner events</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/orderwell-data\">Orderwell data</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/tools\">Tools home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/user\">User home</a></li></ul></div><span style=\"display:none\"></span><div class=\"grommetux-app__announcer\" aria-live=\"polite\"></div></div>\r\n```\r\n I went in and added some debug logging in `warnForDeletedHydratableElement()` to output the `parentNode` and `child`, as follows:\r\n\r\n```\r\nparentNode:\r\n<div class=\"grommetux-box grommetux-box--direction-column grommetux-box--responsive grommetux-box--pad-small\"><ul class=\"home-container small-block-grid-1 medium-block-grid-3 large-block-grid-5 text-center\"><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/cafes\">Cafe home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/cms\">CMS home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/daily-emails\">Daily email home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/easy-meals\">Easy meals</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/foodscripts/plan\">Foodscripts plan</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/household-invites/custom-text\">Household custom text</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/mobile-push\">Mobile push</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/partner-events\">Partner events</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/orderwell-data\">Orderwell data</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/tools\">Tools home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/user\">User home</a></li></ul></div>\r\n```\r\n```\r\nchild:\r\n<ul class=\"home-container small-block-grid-1 medium-block-grid-3 large-block-grid-5 text-center\"><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/cafes\">Cafe home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/cms\">CMS home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/daily-emails\">Daily email home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/easy-meals\">Easy meals</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/foodscripts/plan\">Foodscripts plan</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/household-invites/custom-text\">Household custom text</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/mobile-push\">Mobile push</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/partner-events\">Partner events</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/orderwell-data\">Orderwell data</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/tools\">Tools home</a></li><li class=\"home-item-container\"><a class=\"home-item link link-white bold\" href=\"/user\">User home</a></li></ul>\r\n```\r\nIt was then I noticed something suspicious... in the browser inspector `parentNode` had a little bit different HTML than the server because the browser added `::before` and `::after` pseudo elements into the DOM of the `ul` as is noticeable in a screenshot I attached below.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nI'm not in a place to be able to boil this down to a simple test case at this time, but at least it would be interesting to know if these pseudo elements in the DOM would break the hydration code?\r\n\r\n**What is the expected behavior?**\r\nThat my hydrate doesn't fail because of these pseudo elements (it thats what it is)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nNot sure, but it definitely happened with 16.7.0 and continues with 16.8.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14841",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14841/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14841/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14841/events",
    "html_url": "https://github.com/facebook/react/pull/14841",
    "id": 409933641,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUyNzk0Njc1",
    "number": 14841,
    "title": "Support nonRenderPhase updates in ShallowRenderer",
    "user": {
      "login": "trueadm",
      "id": 1519870,
      "node_id": "MDQ6VXNlcjE1MTk4NzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1519870?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trueadm",
      "html_url": "https://github.com/trueadm",
      "followers_url": "https://api.github.com/users/trueadm/followers",
      "following_url": "https://api.github.com/users/trueadm/following{/other_user}",
      "gists_url": "https://api.github.com/users/trueadm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trueadm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trueadm/subscriptions",
      "organizations_url": "https://api.github.com/users/trueadm/orgs",
      "repos_url": "https://api.github.com/users/trueadm/repos",
      "events_url": "https://api.github.com/users/trueadm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trueadm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-02-13T18:08:21Z",
    "updated_at": "2019-02-14T20:29:03Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14841",
      "html_url": "https://github.com/facebook/react/pull/14841",
      "diff_url": "https://github.com/facebook/react/pull/14841.diff",
      "patch_url": "https://github.com/facebook/react/pull/14841.patch"
    },
    "body": "Addresses the issue with https://github.com/facebook/react/issues/14840.\r\n\r\nFollowing up from the fix in https://github.com/facebook/react/pull/14802 – which although somewhat correct, it didn't make sense when aligned with the comments. I've addressed the comments and approach so it should fix the original issue whilst keeping non-render phase updates and render-phase updates separate. "
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14840",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14840/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14840/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14840/events",
    "html_url": "https://github.com/facebook/react/issues/14840",
    "id": 409904853,
    "node_id": "MDU6SXNzdWU0MDk5MDQ4NTM=",
    "number": 14840,
    "title": "Shallow renderer doesn't update on setState() with Hooks",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1109410193,
        "node_id": "MDU6TGFiZWwxMTA5NDEwMTkz",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Hooks",
        "name": "Component: Hooks",
        "color": "c2f27b",
        "default": false
      },
      {
        "id": 204945357,
        "node_id": "MDU6TGFiZWwyMDQ5NDUzNTc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Shallow%20Renderer",
        "name": "Component: Shallow Renderer",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-13T16:58:29Z",
    "updated_at": "2019-02-13T17:15:54Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "See the issue and the test case with original fix in https://github.com/facebook/react/pull/14802.\r\n\r\nWe'll need to fix it properly, see https://github.com/facebook/react/pull/14802#issuecomment-463277621."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14831",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14831/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14831/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14831/events",
    "html_url": "https://github.com/facebook/react/pull/14831",
    "id": 409055381,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUyMTI2MTQ5",
    "number": 14831,
    "title": "Warn for Context.Consumer with contextType",
    "user": {
      "login": "aweary",
      "id": 6886061,
      "node_id": "MDQ6VXNlcjY4ODYwNjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aweary",
      "html_url": "https://github.com/aweary",
      "followers_url": "https://api.github.com/users/aweary/followers",
      "following_url": "https://api.github.com/users/aweary/following{/other_user}",
      "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
      "organizations_url": "https://api.github.com/users/aweary/orgs",
      "repos_url": "https://api.github.com/users/aweary/repos",
      "events_url": "https://api.github.com/users/aweary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aweary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-02-12T00:58:38Z",
    "updated_at": "2019-02-13T05:02:28Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14831",
      "html_url": "https://github.com/facebook/react/pull/14831",
      "diff_url": "https://github.com/facebook/react/pull/14831.diff",
      "patch_url": "https://github.com/facebook/react/pull/14831.patch"
    },
    "body": "Fixes https://github.com/facebook/react/issues/14793\r\n\r\nExtends the `contextType` warning to include `Context.Consumer`. For both the `ReactDOM` and `ReactDomServer`.\r\n\r\nSince `$$typeof` alone can't be used to distinguish consumers from context objects, the heuristic I used to identify context consumers was to check for the `_context` property which doesn't exist on the context object itself.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14826",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14826/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14826/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14826/events",
    "html_url": "https://github.com/facebook/react/pull/14826",
    "id": 408968823,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUyMDU4NTk2",
    "number": 14826,
    "title": "[scheduler] Add method for forcing a lower framerate",
    "user": {
      "login": "n8schloss",
      "id": 16469724,
      "node_id": "MDQ6VXNlcjE2NDY5NzI0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16469724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/n8schloss",
      "html_url": "https://github.com/n8schloss",
      "followers_url": "https://api.github.com/users/n8schloss/followers",
      "following_url": "https://api.github.com/users/n8schloss/following{/other_user}",
      "gists_url": "https://api.github.com/users/n8schloss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/n8schloss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/n8schloss/subscriptions",
      "organizations_url": "https://api.github.com/users/n8schloss/orgs",
      "repos_url": "https://api.github.com/users/n8schloss/repos",
      "events_url": "https://api.github.com/users/n8schloss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/n8schloss/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-11T20:47:32Z",
    "updated_at": "2019-02-12T15:29:09Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14826",
      "html_url": "https://github.com/facebook/react/pull/14826",
      "diff_url": "https://github.com/facebook/react/pull/14826.diff",
      "patch_url": "https://github.com/facebook/react/pull/14826.patch"
    },
    "body": "This is a follow up to https://github.com/facebook/react/pull/14746. On very low end devices we may want to force scheduler to run at a lower framerate than 30fps even if the browser/device supports something faster. Lower spec devices may not be able to run enough tasks within 33ms to make meaningful progress, so this adds a function that lets developers force a specific frame rate."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14817",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14817/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14817/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14817/events",
    "html_url": "https://github.com/facebook/react/issues/14817",
    "id": 408648101,
    "node_id": "MDU6SXNzdWU0MDg2NDgxMDE=",
    "number": 14817,
    "title": "How to tell if getDerivedStateFromProps is triggered by state change or props change?",
    "user": {
      "login": "yufangfred",
      "id": 8287413,
      "node_id": "MDQ6VXNlcjgyODc0MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8287413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yufangfred",
      "html_url": "https://github.com/yufangfred",
      "followers_url": "https://api.github.com/users/yufangfred/followers",
      "following_url": "https://api.github.com/users/yufangfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/yufangfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yufangfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yufangfred/subscriptions",
      "organizations_url": "https://api.github.com/users/yufangfred/orgs",
      "repos_url": "https://api.github.com/users/yufangfred/repos",
      "events_url": "https://api.github.com/users/yufangfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yufangfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-02-11T06:21:31Z",
    "updated_at": "2019-02-11T14:24:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "The component receives a list of Objects as prop. I want to display it with infinite scroll. It has the state \"curNum\", which is current number of items to be displayed. \"curNum\" changes when scroll down so the list of items is sliced based on the \"curNum\".\r\n\r\nThe list of object will be updated by the parent component, and \"curNum\" should be reset to initial value.\r\n\r\nWith componentWillReceiveProps I can do:\r\n```\r\ncomponentWillReceiveProps(newProps) {\r\n  this.setState({\r\n    curNum: initNum,\r\n  });\r\n}\r\n```\r\n\r\nbut how can I rewrite it using  ```getDerivedStateFromProps```? I read that the new method will be triggerged even if the state changes. So how can I know I am recieving new props?\r\n\r\nDo I have to mirror a copy of the list to the sate and then deep check if the list of objects are equal every time?\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14816",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14816/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14816/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14816/events",
    "html_url": "https://github.com/facebook/react/pull/14816",
    "id": 408630644,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUxNzk4NjE0",
    "number": 14816,
    "title": "Support React.memo in ReactShallowRenderer",
    "user": {
      "login": "aweary",
      "id": 6886061,
      "node_id": "MDQ6VXNlcjY4ODYwNjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6886061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aweary",
      "html_url": "https://github.com/aweary",
      "followers_url": "https://api.github.com/users/aweary/followers",
      "following_url": "https://api.github.com/users/aweary/following{/other_user}",
      "gists_url": "https://api.github.com/users/aweary/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aweary/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aweary/subscriptions",
      "organizations_url": "https://api.github.com/users/aweary/orgs",
      "repos_url": "https://api.github.com/users/aweary/repos",
      "events_url": "https://api.github.com/users/aweary/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aweary/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-02-11T04:26:53Z",
    "updated_at": "2019-02-12T18:53:55Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14816",
      "html_url": "https://github.com/facebook/react/pull/14816",
      "diff_url": "https://github.com/facebook/react/pull/14816.diff",
      "patch_url": "https://github.com/facebook/react/pull/14816.patch"
    },
    "body": "Fixes https://github.com/facebook/react/issues/14807\r\n\r\n* Adds support for `React.memo` in `React.ShallowRenderer`. Instead of using `element.type` directly it now checks if the element is `REACT_MEMO_TYPE` and uses the nested type if it is.\r\n\r\n* Validates the propTypes for the inner component\r\n\r\n\r\nFor testing I just coped `ReactShallowRenderer-test` and wrapped every component in `React.memo` to validate everything worked. I don't think we should take approach, but it made it easy to find issues 🤷‍♂️maybe we can have a single set of tests that run with and without memo?\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14807",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14807/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14807/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14807/events",
    "html_url": "https://github.com/facebook/react/issues/14807",
    "id": 408412362,
    "node_id": "MDU6SXNzdWU0MDg0MTIzNjI=",
    "number": 14807,
    "title": "Shallow renderer does not support React.memo",
    "user": {
      "login": "ljharb",
      "id": 45469,
      "node_id": "MDQ6VXNlcjQ1NDY5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45469?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ljharb",
      "html_url": "https://github.com/ljharb",
      "followers_url": "https://api.github.com/users/ljharb/followers",
      "following_url": "https://api.github.com/users/ljharb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ljharb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ljharb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ljharb/subscriptions",
      "organizations_url": "https://api.github.com/users/ljharb/orgs",
      "repos_url": "https://api.github.com/users/ljharb/repos",
      "events_url": "https://api.github.com/users/ljharb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ljharb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 204945357,
        "node_id": "MDU6TGFiZWwyMDQ5NDUzNTc=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Shallow%20Renderer",
        "name": "Component: Shallow Renderer",
        "color": "eb6420",
        "default": false
      },
      {
        "id": 121709921,
        "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
        "name": "Type: Feature Request",
        "color": "c7def8",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-02-09T08:44:57Z",
    "updated_at": "2019-02-12T16:38:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nIn normal rendering, you can memoize a class-based component: https://jsfiddle.net/586ea3cx/\r\n\r\nWith the shallow renderer, it seems like you can't: https://jsfiddle.net/odj217Lv/1/\r\n\r\nThis might be blocking https://github.com/airbnb/enzyme/pull/1914, in which tests are failing with `Cannot call a class as a function`. (it's tough to repro stuff with the shallow renderer)"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14800",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14800/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14800/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14800/events",
    "html_url": "https://github.com/facebook/react/pull/14800",
    "id": 408284455,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjUxNTY3MjYy",
    "number": 14800,
    "title": "Split ReactHooks-test into public and internal",
    "user": {
      "login": "gaearon",
      "id": 810438,
      "node_id": "MDQ6VXNlcjgxMDQzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-08T19:07:25Z",
    "updated_at": "2019-02-09T20:23:59Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/14800",
      "html_url": "https://github.com/facebook/react/pull/14800",
      "diff_url": "https://github.com/facebook/react/pull/14800.diff",
      "patch_url": "https://github.com/facebook/react/pull/14800.patch"
    },
    "body": "Most of these tests can run against public bundles.\r\n\r\n(In fact all of them could but that would make assertions a bit annoying in DEV.)\r\n\r\nI split out the tests that needed no changes. The total number is the same (32)."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14797",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14797/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14797/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14797/events",
    "html_url": "https://github.com/facebook/react/issues/14797",
    "id": 408217365,
    "node_id": "MDU6SXNzdWU0MDgyMTczNjU=",
    "number": 14797,
    "title": "Module mock yields unexpected act() error",
    "user": {
      "login": "alexjoyner",
      "id": 7675099,
      "node_id": "MDQ6VXNlcjc2NzUwOTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7675099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexjoyner",
      "html_url": "https://github.com/alexjoyner",
      "followers_url": "https://api.github.com/users/alexjoyner/followers",
      "following_url": "https://api.github.com/users/alexjoyner/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexjoyner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexjoyner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexjoyner/subscriptions",
      "organizations_url": "https://api.github.com/users/alexjoyner/orgs",
      "repos_url": "https://api.github.com/users/alexjoyner/repos",
      "events_url": "https://api.github.com/users/alexjoyner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexjoyner/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929155,
        "node_id": "MDU6TGFiZWw0MDkyOTE1NQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
        "name": "Type: Question",
        "color": "cc317c",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "threepointone",
      "id": 18808,
      "node_id": "MDQ6VXNlcjE4ODA4",
      "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/threepointone",
      "html_url": "https://github.com/threepointone",
      "followers_url": "https://api.github.com/users/threepointone/followers",
      "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
      "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
      "organizations_url": "https://api.github.com/users/threepointone/orgs",
      "repos_url": "https://api.github.com/users/threepointone/repos",
      "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/threepointone/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "threepointone",
        "id": 18808,
        "node_id": "MDQ6VXNlcjE4ODA4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/18808?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/threepointone",
        "html_url": "https://github.com/threepointone",
        "followers_url": "https://api.github.com/users/threepointone/followers",
        "following_url": "https://api.github.com/users/threepointone/following{/other_user}",
        "gists_url": "https://api.github.com/users/threepointone/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/threepointone/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/threepointone/subscriptions",
        "organizations_url": "https://api.github.com/users/threepointone/orgs",
        "repos_url": "https://api.github.com/users/threepointone/repos",
        "events_url": "https://api.github.com/users/threepointone/events{/privacy}",
        "received_events_url": "https://api.github.com/users/threepointone/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-02-08T16:06:16Z",
    "updated_at": "2019-02-13T16:25:55Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nI am trying to figure out where is the best place to put a module mock according to the new react version 16.8.1.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n``` javascript\r\nimport React from 'react';\r\nimport { act } from 'react-dom/test-utils';\r\nimport { mount } from 'enzyme';\r\nimport { getPointsFromGroupID } from './utils/getPointsFromGroupID';\r\nimport { TDashBody } from '.';\r\n\r\njest.mock('./utils/getPointsFromGroupID', () => ({\r\n  getPointsFromGroupID: jest.fn(() => Promise.resolve({})),\r\n}));\r\n\r\nconst getDefaultProps = () => ({\r\n  currentGroup: 0,\r\n});\r\ndescribe('DashBody', () => {\r\n  let component;\r\n  beforeEach(() => {\r\n    act(() => {\r\n      const props = getDefaultProps();\r\n      component = mount(<TDashBody {...props} />);\r\n    });\r\n  });\r\n  describe('rendering', () => {\r\n    it('Should render without exploding', () => {\r\n      expect(component).toBeDefined();\r\n    });\r\n  });\r\n});\r\n```\r\n\r\n**What is the expected behavior?**\r\nThis test passes, but the placement of the mock module call gives me the act() error\r\n```\r\nWarning: An update to TDashBody inside a test was not wrapped in act(...).\r\n\r\n      When testing, code that causes React state updates should be wrapped into act(...):\r\n\r\n      act(() => {\r\n        /* fire events that update state */\r\n      });\r\n      /* assert on the output */\r\n\r\n      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://fb\r\n\r\n.me/react-wrap-tests-with-act\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nv16.8.1 running chrome on windows 10"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14793",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14793/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14793/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14793/events",
    "html_url": "https://github.com/facebook/react/issues/14793",
    "id": 407969559,
    "node_id": "MDU6SXNzdWU0MDc5Njk1NTk=",
    "number": 14793,
    "title": "contextType apparently not working in dev mode server side rendering",
    "user": {
      "login": "EthanRutherford",
      "id": 5589147,
      "node_id": "MDQ6VXNlcjU1ODkxNDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5589147?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanRutherford",
      "html_url": "https://github.com/EthanRutherford",
      "followers_url": "https://api.github.com/users/EthanRutherford/followers",
      "following_url": "https://api.github.com/users/EthanRutherford/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanRutherford/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanRutherford/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanRutherford/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanRutherford/orgs",
      "repos_url": "https://api.github.com/users/EthanRutherford/repos",
      "events_url": "https://api.github.com/users/EthanRutherford/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanRutherford/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 739777675,
        "node_id": "MDU6TGFiZWw3Mzk3Nzc2NzU=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Component%20API",
        "name": "Component: Component API",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-02-08T01:21:30Z",
    "updated_at": "2019-02-13T03:53:12Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nCrash during server render due to `this.context` being undefined. Bug only happens in SSR, and only in dev mode react. Issue appears neither in browser renders, nor in production mode server renders.\r\n\r\nnote: Using https://reactjs.net/ for c# server-side rendering, with bundled-in version of react disabled (so using the same version of react as the client bundle)\r\n\r\n(simplified) application structure\r\n```\r\n// root component\r\nconst {Provider, Consumer} = createContext({});\r\nconst Root = props => return <Provider value={props.notNull}>{props.children}</Provider>;\r\n\r\n// consumer\r\nclass ConsumingComponent extends Component {\r\n  static contextType = Consumer;\r\n\r\n  render() {\r\n    if (this.context.someValue) return null;\r\n    return <div/>;\r\n  }\r\n}\r\n\r\n// render tree\r\n<Root>...<ConsumingComponent/>...</Root>\r\n\r\n// output of server render\r\nJsRuntimeException: TypeError: unable to get property 'someValue' of undefined or null reference.\r\n```\r\n\r\n**What is the expected behavior?**\r\n`this.context` in the consuming component should be the value passed to the Provider, and not `undefined`.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nThe bug, as best as I can pin down, appeared in 16.6.3. The code works in 16.6..1, and 16.6.2 is listed as a broken release in the changelog.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/14785",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/14785/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/14785/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/14785/events",
    "html_url": "https://github.com/facebook/react/issues/14785",
    "id": 407597506,
    "node_id": "MDU6SXNzdWU0MDc1OTc1MDY=",
    "number": 14785,
    "title": "defaultValue does not work with input when type is set to submit",
    "user": {
      "login": "jakubkosinski",
      "id": 2722,
      "node_id": "MDQ6VXNlcjI3MjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakubkosinski",
      "html_url": "https://github.com/jakubkosinski",
      "followers_url": "https://api.github.com/users/jakubkosinski/followers",
      "following_url": "https://api.github.com/users/jakubkosinski/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakubkosinski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakubkosinski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakubkosinski/subscriptions",
      "organizations_url": "https://api.github.com/users/jakubkosinski/orgs",
      "repos_url": "https://api.github.com/users/jakubkosinski/repos",
      "events_url": "https://api.github.com/users/jakubkosinski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakubkosinski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-02-07T09:01:40Z",
    "updated_at": "2019-02-08T16:27:02Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nWhen you use uncontrolled `<input type=\"submit\" />` and set `defaultValue` attribute, it would be ignored in versions 1.5.0 or higher (there would be no `value` attribute in the HTML result). It was working correctly in older versions. Looks like only `type=\"submit\"` is affected, for other input types `defaultValue` behaves correctly.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nCorrect behaviour with react 16.4.2: https://codepen.io/anon/pen/zePmrZ\r\nIncorrect behaviour with react 16.8.1: https://codepen.io/anon/pen/PVOyqV\r\n\r\n**What is the expected behavior?**\r\n\r\nWhen `defaultValue=\"foo\"` is set on `<input type=\"submit\"/>` it should result in `<input type=\"submit\" value=\"foo\" />` in the HTML result.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nAll versions starting from 16.5.0\r\n"
  }
]
